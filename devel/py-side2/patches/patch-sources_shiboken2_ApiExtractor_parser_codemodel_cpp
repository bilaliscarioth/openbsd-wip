Index: sources/shiboken2/ApiExtractor/parser/codemodel.cpp
--- sources/shiboken2/ApiExtractor/parser/codemodel.cpp.orig
+++ sources/shiboken2/ApiExtractor/parser/codemodel.cpp
@@ -1121,11 +1121,23 @@ void _ArgumentModelItem::setDefaultValue(bool defaultV
     m_defaultValue = defaultValue;
 }
 
+bool _ArgumentModelItem::scopeResolution() const
+{
+    return m_scopeResolution;
+}
+
+void _ArgumentModelItem::setScopeResolution(bool v)
+{
+    m_scopeResolution = v;
+}
+
 #ifndef QT_NO_DEBUG_STREAM
 void _ArgumentModelItem::formatDebug(QDebug &d) const
 {
     _CodeModelItem::formatDebug(d);
     d << ", type=" << m_type;
+    if (m_scopeResolution)
+        d << ", [m_scope resolution]";
     if (m_defaultValue)
         d << ", defaultValue=\"" << m_defaultValueExpression << '"';
 }
@@ -1200,6 +1212,16 @@ void _FunctionModelItem::setVariadics(bool isVariadics
     m_isVariadics = isVariadics;
 }
 
+bool _FunctionModelItem::scopeResolution() const
+{
+    return m_scopeResolution;
+}
+
+void _FunctionModelItem::setScopeResolution(bool v)
+{
+    m_scopeResolution = v;
+}
+
 bool _FunctionModelItem::isNoExcept() const
 {
     return m_exceptionSpecification == ExceptionSpecification::NoExcept;
@@ -1343,6 +1365,8 @@ void _FunctionModelItem::formatDebug(QDebug &d) const
         d << " [explicit]";
     if (m_isInvokable)
         d << " [invokable]";
+    if (m_scopeResolution)
+        d << " [scope resolution]";
     formatModelItemList(d, ", arguments=", m_arguments);
     if (m_isVariadics)
         d << ",...";
