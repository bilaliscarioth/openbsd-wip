Index: gcc/common.opt
--- gcc/common.opt.orig
+++ gcc/common.opt
@@ -680,6 +680,10 @@ Wnull-dereference
 Common Var(warn_null_dereference) Warning
 Warn if dereferencing a NULL pointer may lead to erroneous or undefined behavior.
 
+Wstack-larger-than-
+Common RejectNegative Joined UInteger
+-Wstack-larger-than-<number> Warn if a function is using more than <number> bytes of stack space for its local variables.
+
 Wunsafe-loop-optimizations
 Common Ignore Warning
 Does nothing. Preserved for backward compatibility.
@@ -803,7 +807,7 @@ Warn about statements between switch's controlling exp
 case.
 
 Wsystem-headers
-Common Var(warn_system_headers) Warning
+Common Var(warn_system_headers) Init(1) Warning
 Do not suppress warnings from system headers.
 
 Wtrampolines
@@ -862,6 +866,10 @@ Wunused-variable
 Common Var(warn_unused_variable) Warning EnabledBy(Wunused)
 Warn when a variable is unused.
 
+Wvariable-decl
+Common Var(warn_variable_decl)
+Warn about variable-sized declarations
+
 Wcoverage-mismatch
 Common Var(warn_coverage_mismatch) Init(1) Warning
 Warn in case profiles in -fprofile-use do not match.
@@ -1035,7 +1043,7 @@ Common Joined RejectNegative UInteger Var(flag_abi_ver
 The version of the C++ ABI in use.
 
 faggressive-loop-optimizations
-Common Var(flag_aggressive_loop_optimizations) Optimization Init(1)
+Common Var(flag_aggressive_loop_optimizations) Optimization
 Aggressively optimize loops using language constraints.
 
 falign-functions
@@ -1326,7 +1334,7 @@ Common Var(flag_delete_dead_exceptions) Init(0) Optimi
 Delete dead instructions that may throw exceptions.
 
 fdelete-null-pointer-checks
-Common Var(flag_delete_null_pointer_checks) Init(-1) Optimization
+Common Var(flag_delete_null_pointer_checks) Init(0) Optimization
 Delete useless null pointer checks.
 
 fdevirtualize-at-ltrans
@@ -1886,7 +1894,7 @@ Enum(hardcfr_check_noreturn_calls) String(always) Valu
 ; On SVR4 targets, it also controls whether or not to emit a
 ; string identifying the compiler.
 fident
-Common Var(flag_no_ident,0)
+Common Var(flag_no_ident,0) Init(1)
 Process #ident directives.
 
 fif-conversion
@@ -2000,7 +2008,7 @@ fcf-protection
 Common RejectNegative Alias(fcf-protection=,full)
 
 fcf-protection=
-Common Joined RejectNegative Enum(cf_protection_level) EnumSet Var(flag_cf_protection) Init(CF_NONE)
+Common Joined RejectNegative Enum(cf_protection_level) EnumSet Var(flag_cf_protection) Init(CF_DEFAULT)
 -fcf-protection=[full|branch|return|none|check]	Instrument functions with checks to verify jump/call/return control-flow transfer
 instructions have valid targets.
 
@@ -2166,7 +2174,7 @@ Common Var(flag_ivopts) Init(1) Optimization
 Optimize induction variables on trees.
 
 fjump-tables
-Common Var(flag_jump_tables) Init(1) Optimization
+Common Var(flag_jump_tables) Init(0) Optimization
 Use jump tables for sufficiently large switch statements.
 
 fbit-tests
@@ -2900,7 +2908,7 @@ Common RejectNegative Joined Var(common_deferred_optio
 -fstack-limit-symbol=<name>	Trap if the stack goes past symbol <name>.
 
 fstack-protector
-Common Var(flag_stack_protect, 1) Init(-1) Optimization
+Common Var(flag_stack_protect, 3) Init(-1) Optimization
 Use propolice as a stack protection method.
 
 fstack-protector-all
@@ -3662,6 +3670,9 @@ no-canonical-prefixes
 Driver
 
 nodefaultlibs
+Driver
+
+nopie
 Driver
 
 nostartfiles
